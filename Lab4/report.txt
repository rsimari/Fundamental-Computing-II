Lab4 Report

The black jack program from the users works by first running the program and it will display the dealers total for their cards. The user will then be given the option to hit or stand. if they hit it will add to their total until they either decide to stand or if they go over 21 and bust. At the end if their total is higher than the dealers and less then or equal to 21 then they win. Once they are done playing they will use n instead of y and the program will display the number of times the player and dealer won. 

Internally the program works by utilizing the CardDeck class which has a deque that is manipulated by its memeber functions. The deque is a double ended que that can pop and push to the front and end. To print the cards I used an iterator to go through all the whole deque and for the printReverse() I used a reverse iterator to go backwards across the deque. I made a deal function that pick a card off the top of the deck after they have been shuffled with random_shuffle() from stl. When the deque.size() became less then 15 I made a new deck to preserve the randomness of the game. The black jack gameplay uses the Deal() function and a series of loops to make an interface where a user can play as many games of black jack as they want and it will record the number of wins with a counters for the dealer and the player

I verified the output by checking the addition and the randomness of the cards chosen. Also I made sure that no card chosen was not within the valid range of cards. Additionally, I played games to make sure that the program recognized a bust properly and gave the win to the right player. I also checked that the deck was resetting by playing a lot of games and if the deck wasnt resetting then the values would be garbage values. Since this was not the case I know that it is working properly.
